openapi: 3.0.0
info:
  description: REST API
  title: REST API
  version: 0.0.1
servers:
- url: /
paths:
  /test:
    post:
      description: Test
      responses:
        "201":
          description: successfully
      tags:
      - Test
components:
  schemas:
    Article:
      properties:
        data:
          $ref: '#/components/schemas/ArticleData'
        included:
          $ref: '#/components/schemas/ArticleInclude'
      required:
      - data
      - included
      type: object
    ArticleData:
      properties:
        id:
          description: article ID
          format: uuid
          type: string
        type:
          enum:
          - article
          type: string
        attributes:
          $ref: '#/components/schemas/ArticleAttributes'
      required:
      - attributes
      - id
      - type
      type: object
    ArticleAttributes:
      properties:
        title:
          description: Article title
          example: Article title
          type: string
        status:
          description: Article status
          example: Article status
          type: string
        icon:
          description: Article link
          example: Article link
          type: string
        desc:
          description: Article description
          example: Article description
          type: string
        content:
          items:
            $ref: '#/components/schemas/Section'
          type: array
        published_at:
          description: Published at
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: Updated at
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        created_at:
          description: Created at
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - status
      - title
      type: object
    ArticleInclude:
      properties:
        authors:
          items:
            $ref: '#/components/schemas/AuthorData'
          type: array
        tags:
          items:
            $ref: '#/components/schemas/TagData'
          type: array
      required:
      - authors
      - tags
      type: object
    CreateArticle:
      properties:
        data:
          $ref: '#/components/schemas/CreateArticle_data'
      required:
      - data
      - included
      type: object
    UpdateArticle:
      properties:
        data:
          $ref: '#/components/schemas/UpdateArticle_data'
      required:
      - data
      - included
      type: object
    UpdateArticleContent:
      properties:
        data:
          $ref: '#/components/schemas/UpdateArticleContent_data'
      required:
      - data
      - included
      type: object
    ArticleShort:
      properties:
        data:
          $ref: '#/components/schemas/ArticleShort_data'
      required:
      - data
      - included
      type: object
    ArticleShortCollection:
      properties:
        data:
          $ref: '#/components/schemas/ArticleShortCollection_data'
      required:
      - data
      - links
      type: object
    ArticleWithRecommends:
      properties:
        data:
          $ref: '#/components/schemas/ArticleData'
        included:
          $ref: '#/components/schemas/ArticleWithRecommendsInclude'
      required:
      - data
      - included
      type: object
    ArticleWithRecommendsInclude:
      properties:
        authors:
          items:
            $ref: '#/components/schemas/AuthorData'
          type: array
        tags:
          items:
            $ref: '#/components/schemas/TagData'
          type: array
        recommends:
          items:
            $ref: '#/components/schemas/ArticleShort/properties/data'
          type: array
      required:
      - authors
      - recommends
      - tags
      type: object
    Author:
      properties:
        data:
          $ref: '#/components/schemas/AuthorData'
      required:
      - data
      type: object
    AuthorData:
      properties:
        id:
          description: Author ID
          format: uuid
          type: string
        type:
          enum:
          - author
          type: string
        attributes:
          $ref: '#/components/schemas/AuthorAttributes'
      required:
      - attributes
      - id
      - type
      type: object
    AuthorAttributes:
      properties:
        name:
          type: string
        status:
          type: string
        desc:
          type: string
        avatar:
          type: string
        email:
          type: string
        telegram:
          type: string
        twitter:
          type: string
        updated_at:
          format: date-time
          type: string
        created_at:
          format: date-time
          type: string
      required:
      - created_at
      - name
      type: object
    CreateAuthor:
      properties:
        data:
          $ref: '#/components/schemas/CreateAuthor_data'
      required:
      - data
      type: object
    UpdateAuthor:
      properties:
        data:
          $ref: '#/components/schemas/UpdateAuthor_data'
      required:
      - data
      type: object
    AuthorsCollection:
      properties:
        data:
          $ref: '#/components/schemas/AuthorsCollection_data'
      required:
      - data
      - links
      type: object
    SetAuthorship:
      properties:
        data:
          $ref: '#/components/schemas/SetAuthorship_data'
      required:
      - data
      type: object
    Section:
      properties:
        id:
          description: Unique identifier for the content in this content block. (Num
            in section)
          type: integer
        type:
          description: The type of content in this section.
          enum:
          - text
          - media
          - audio
          type: string
        text:
          items:
            $ref: '#/components/schemas/Section_text_inner'
          type: array
        media:
          items:
            $ref: '#/components/schemas/Section_media_inner'
          type: array
        audio:
          items:
            $ref: '#/components/schemas/Section_audio_inner'
          type: array
      required:
      - id
      - type
      type: object
    DeleteContentSection:
      properties:
        type:
          enum:
          - content_update_section
          type: string
        section_id:
          description: Unique identifier for the content section to be deleted.
          type: integer
      required:
      - section_id
      - type
      type: object
    UpdateContentSection:
      properties:
        type:
          enum:
          - content_update_section
          type: string
        section:
          $ref: '#/components/schemas/Section'
      required:
      - section
      - type
      type: object
    ContentSectionResponse:
      properties:
        status:
          description: The status of the content update operation.
          enum:
          - success
          - error
          type: string
        code:
          description: A code representing the result of the operation.
          type: integer
        message:
          description: A message providing additional information about the operation.
          type: string
        type:
          enum:
          - content_update_section
          type: string
        section:
          $ref: '#/components/schemas/Section'
      required:
      - code
      - message
      - section
      - status
      - type
      type: object
    Tag:
      properties:
        data:
          $ref: '#/components/schemas/TagData'
      required:
      - data
      type: object
    TagData:
      properties:
        id:
          description: tag id
          type: string
        type:
          enum:
          - tag
          type: string
        attributes:
          $ref: '#/components/schemas/TagAttributes'
      required:
      - attributes
      - id
      - type
      type: object
    TagAttributes:
      properties:
        name:
          type: string
        status:
          type: string
        type:
          type: string
        color:
          description: Tag color
          example: '#FF5733'
          type: string
        icon:
          description: Tag icon
          example: https://example.com/icon.png
          type: string
        updated_at:
          format: date-time
          type: string
        created_at:
          format: date-time
          type: string
      required:
      - color
      - created_at
      - icon
      - name
      - status
      - type
      type: object
    CreateTag:
      properties:
        data:
          $ref: '#/components/schemas/CreateTag_data'
      required:
      - data
      type: object
    UpdateTag:
      properties:
        data:
          $ref: '#/components/schemas/UpdateTag_data'
      required:
      - data
      type: object
    TagCollection:
      properties:
        data:
          $ref: '#/components/schemas/TagCollection_data'
      required:
      - data
      - links
      type: object
    SetHashtag:
      properties:
        data:
          $ref: '#/components/schemas/SetHashtag_data'
      required:
      - data
      type: object
    Relationships:
      properties:
        id:
          type: string
        type:
          type: string
      required:
      - id
      - type
      type: object
    LinksDirect:
      properties:
        links:
          $ref: '#/components/schemas/LinksDirect_links'
        data:
          $ref: '#/components/schemas/LinksDirect_data'
      required:
      - links
      type: object
    LinksPagination:
      properties:
        previous:
          description: Link to the previous page
          type: string
        self:
          description: Link to the current page
          type: string
        next:
          description: Link to the next page
          type: string
      required:
      - self
      type: object
    LinksSelf:
      properties:
        self:
          description: Link to resources
          type: string
        update:
          description: Link to update resources
          type: string
      required:
      - self
      type: object
    CreateArticle_data_attributes:
      properties:
        title:
          description: Article title
          example: Article title
          type: string
      required:
      - title
      type: object
    CreateArticle_data:
      properties:
        type:
          enum:
          - article_create
          type: string
        attributes:
          $ref: '#/components/schemas/CreateArticle_data_attributes'
      required:
      - attributes
      - type
      type: object
    UpdateArticle_data_attributes:
      properties:
        status:
          description: Article status
          example: Article status
          type: string
        title:
          description: Article title
          example: Article title
          type: string
        icon:
          description: Article link
          example: Article link
          type: string
        desc:
          description: Article description
          example: Article description
          type: string
        authors:
          description: Authors ID uuid
          items:
            type: string
          type: array
        tags:
          items:
            type: string
          type: array
      type: object
    UpdateArticle_data:
      properties:
        id:
          description: Article ID uuid
          example: Article ID uuid
          type: string
        type:
          enum:
          - article_update
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateArticle_data_attributes'
      required:
      - attributes
      - id
      - type
      type: object
    UpdateArticleContent_data_attributes:
      properties:
        content:
          items:
            $ref: '#/components/schemas/Section'
          type: array
      type: object
    UpdateArticleContent_data:
      properties:
        id:
          description: Article ID uuid
          example: Article ID uuid
          type: string
        type:
          enum:
          - article_content_update
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateArticleContent_data_attributes'
      required:
      - attributes
      - id
      - type
      type: object
    ArticleShort_data_attributes:
      properties:
        title:
          description: Article title
          example: Article title
          type: string
        icon:
          description: Article link
          example: Article link
          type: string
        desc:
          description: Article description
          example: Article description
          type: string
        created_at:
          description: Created at
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - desc
      - icon
      - title
      type: object
    ArticleShort_data_relationships:
      properties:
        authors:
          items:
            $ref: '#/components/schemas/Relationships'
          type: array
        tags:
          items:
            $ref: '#/components/schemas/Relationships'
          type: array
      required:
      - authors
      - tags
      type: object
    ArticleShort_data:
      properties:
        id:
          description: article ID
          format: uuid
          type: string
        type:
          enum:
          - article
          type: string
        attributes:
          $ref: '#/components/schemas/ArticleShort_data_attributes'
        relationships:
          $ref: '#/components/schemas/ArticleShort_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    ArticleShortCollection_data_attributes:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ArticleShort/properties/data'
          type: array
      required:
      - data
      type: object
    ArticleShortCollection_data:
      properties:
        type:
          enum:
          - article_short_collection
          type: string
        attributes:
          $ref: '#/components/schemas/ArticleShortCollection_data_attributes'
      required:
      - attributes
      - type
      type: object
    CreateAuthor_data_attributes:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    CreateAuthor_data:
      properties:
        type:
          enum:
          - author_create
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAuthor_data_attributes'
      required:
      - attributes
      - type
      type: object
    UpdateAuthor_data_attributes:
      properties:
        name:
          type: string
        status:
          type: string
        desc:
          type: string
        avatar:
          type: string
        email:
          type: string
        telegram:
          type: string
        twitter:
          type: string
      type: object
    UpdateAuthor_data:
      properties:
        id:
          type: string
        type:
          enum:
          - author_update
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateAuthor_data_attributes'
      required:
      - attributes
      - id
      - type
      type: object
    AuthorsCollection_data_attributes:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AuthorData'
          type: array
      required:
      - data
      type: object
    AuthorsCollection_data:
      properties:
        type:
          enum:
          - authors_collection
          type: string
        attributes:
          $ref: '#/components/schemas/AuthorsCollection_data_attributes'
      required:
      - attributes
      - type
      type: object
    SetAuthorship_data_attributes:
      properties:
        authors:
          items:
            description: The ID of the author.
            format: uuid
            type: string
          type: array
      required:
      - authors
      type: object
    SetAuthorship_data:
      properties:
        id:
          description: The ID of the article set.
          type: string
        type:
          enum:
          - authorship_set
          type: string
        attributes:
          $ref: '#/components/schemas/SetAuthorship_data_attributes'
      required:
      - attributes
      - id
      - type
      type: object
    Section_text_inner:
      properties:
        text:
          type: string
      required:
      - text
      type: object
    Section_media_inner:
      properties:
        url:
          type: string
        caption:
          type: string
        alt:
          type: string
        width:
          type: integer
        height:
          type: integer
        source:
          type: string
      required:
      - alt
      - caption
      - height
      - source
      - url
      - width
      type: object
    Section_audio_inner:
      properties:
        url:
          type: string
        duration:
          type: integer
        caption:
          type: string
        icon:
          type: string
      required:
      - caption
      - duration
      - icon
      - url
      type: object
    CreateTag_data_attributes:
      properties:
        name:
          description: tag name
          type: string
        status:
          description: tag status
          enum:
          - active
          - inactive
          type: string
        type:
          description: tag type
          enum:
          - tag
          type: string
        color:
          description: tag color
          type: string
        icon:
          description: tag icon
          type: string
      required:
      - color
      - icon
      - name
      - status
      - type
      type: object
    CreateTag_data:
      properties:
        type:
          enum:
          - tag_create
          type: string
        attributes:
          $ref: '#/components/schemas/CreateTag_data_attributes'
      required:
      - attributes
      - type
      type: object
    UpdateTag_data_attributes:
      properties:
        name:
          description: tag name
          type: string
        status:
          description: tag status
          enum:
          - active
          - inactive
          type: string
        type:
          description: tag type
          enum:
          - tag
          type: string
        description:
          description: tag description
          type: string
        color:
          description: tag color
          type: string
        icon:
          description: tag icon
          type: string
      type: object
    UpdateTag_data:
      properties:
        id:
          description: tag id
          type: string
        type:
          enum:
          - tag_update
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateTag_data_attributes'
      required:
      - attributes
      - id
      - type
      type: object
    TagCollection_data_attributes:
      properties:
        data:
          items:
            $ref: '#/components/schemas/TagData'
          type: array
      required:
      - data
      type: object
    TagCollection_data:
      properties:
        type:
          enum:
          - tags_collection
          type: string
        attributes:
          $ref: '#/components/schemas/TagCollection_data_attributes'
      required:
      - attributes
      - type
      type: object
    SetHashtag_data_attributes:
      properties:
        tags:
          items:
            description: The ID of the author.
            type: string
          type: array
      required:
      - tags
      type: object
    SetHashtag_data:
      properties:
        id:
          description: The ID of the article set.
          type: string
        type:
          enum:
          - hashtag_set
          type: string
        attributes:
          $ref: '#/components/schemas/SetHashtag_data_attributes'
      required:
      - attributes
      - id
      - type
      type: object
    LinksDirect_links:
      properties:
        self:
          description: Link to participants
          type: string
        related:
          description: Link to participants
          type: string
      required:
      - data
      - related
      - self
      type: object
    LinksDirect_data:
      properties:
        id:
          description: resources id
          type: string
        type:
          description: resources type
          type: string
      required:
      - id
      - type
      type: object
