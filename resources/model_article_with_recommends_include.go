/*
REST API

REST API

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ArticleWithRecommendsInclude type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleWithRecommendsInclude{}

// ArticleWithRecommendsInclude struct for ArticleWithRecommendsInclude
type ArticleWithRecommendsInclude struct {
	Authors []AuthorData `json:"authors"`
	Tags []TagData `json:"tags"`
	Recommends []ArticleShortData `json:"recommends"`
}

type _ArticleWithRecommendsInclude ArticleWithRecommendsInclude

// NewArticleWithRecommendsInclude instantiates a new ArticleWithRecommendsInclude object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleWithRecommendsInclude(authors []AuthorData, tags []TagData, recommends []ArticleShortData) *ArticleWithRecommendsInclude {
	this := ArticleWithRecommendsInclude{}
	this.Authors = authors
	this.Tags = tags
	this.Recommends = recommends
	return &this
}

// NewArticleWithRecommendsIncludeWithDefaults instantiates a new ArticleWithRecommendsInclude object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleWithRecommendsIncludeWithDefaults() *ArticleWithRecommendsInclude {
	this := ArticleWithRecommendsInclude{}
	return &this
}

// GetAuthors returns the Authors field value
func (o *ArticleWithRecommendsInclude) GetAuthors() []AuthorData {
	if o == nil {
		var ret []AuthorData
		return ret
	}

	return o.Authors
}

// GetAuthorsOk returns a tuple with the Authors field value
// and a boolean to check if the value has been set.
func (o *ArticleWithRecommendsInclude) GetAuthorsOk() ([]AuthorData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Authors, true
}

// SetAuthors sets field value
func (o *ArticleWithRecommendsInclude) SetAuthors(v []AuthorData) {
	o.Authors = v
}

// GetTags returns the Tags field value
func (o *ArticleWithRecommendsInclude) GetTags() []TagData {
	if o == nil {
		var ret []TagData
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ArticleWithRecommendsInclude) GetTagsOk() ([]TagData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *ArticleWithRecommendsInclude) SetTags(v []TagData) {
	o.Tags = v
}

// GetRecommends returns the Recommends field value
func (o *ArticleWithRecommendsInclude) GetRecommends() []ArticleShortData {
	if o == nil {
		var ret []ArticleShortData
		return ret
	}

	return o.Recommends
}

// GetRecommendsOk returns a tuple with the Recommends field value
// and a boolean to check if the value has been set.
func (o *ArticleWithRecommendsInclude) GetRecommendsOk() ([]ArticleShortData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recommends, true
}

// SetRecommends sets field value
func (o *ArticleWithRecommendsInclude) SetRecommends(v []ArticleShortData) {
	o.Recommends = v
}

func (o ArticleWithRecommendsInclude) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleWithRecommendsInclude) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authors"] = o.Authors
	toSerialize["tags"] = o.Tags
	toSerialize["recommends"] = o.Recommends
	return toSerialize, nil
}

func (o *ArticleWithRecommendsInclude) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"authors",
		"tags",
		"recommends",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArticleWithRecommendsInclude := _ArticleWithRecommendsInclude{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArticleWithRecommendsInclude)

	if err != nil {
		return err
	}

	*o = ArticleWithRecommendsInclude(varArticleWithRecommendsInclude)

	return err
}

type NullableArticleWithRecommendsInclude struct {
	value *ArticleWithRecommendsInclude
	isSet bool
}

func (v NullableArticleWithRecommendsInclude) Get() *ArticleWithRecommendsInclude {
	return v.value
}

func (v *NullableArticleWithRecommendsInclude) Set(val *ArticleWithRecommendsInclude) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleWithRecommendsInclude) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleWithRecommendsInclude) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleWithRecommendsInclude(val *ArticleWithRecommendsInclude) *NullableArticleWithRecommendsInclude {
	return &NullableArticleWithRecommendsInclude{value: val, isSet: true}
}

func (v NullableArticleWithRecommendsInclude) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleWithRecommendsInclude) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


