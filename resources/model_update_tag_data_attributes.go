/*
REST API

REST API

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// checks if the UpdateTagDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTagDataAttributes{}

// UpdateTagDataAttributes struct for UpdateTagDataAttributes
type UpdateTagDataAttributes struct {
	// tag name
	Name *string `json:"name,omitempty"`
	// tag status
	Status *string `json:"status,omitempty"`
	// tag type
	Type *string `json:"type,omitempty"`
	// tag description
	Description *string `json:"description,omitempty"`
	// tag color
	Color *string `json:"color,omitempty"`
	// tag icon
	Icon *string `json:"icon,omitempty"`
}

// NewUpdateTagDataAttributes instantiates a new UpdateTagDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTagDataAttributes() *UpdateTagDataAttributes {
	this := UpdateTagDataAttributes{}
	return &this
}

// NewUpdateTagDataAttributesWithDefaults instantiates a new UpdateTagDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTagDataAttributesWithDefaults() *UpdateTagDataAttributes {
	this := UpdateTagDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateTagDataAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTagDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateTagDataAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateTagDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateTagDataAttributes) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTagDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateTagDataAttributes) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateTagDataAttributes) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateTagDataAttributes) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTagDataAttributes) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UpdateTagDataAttributes) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateTagDataAttributes) SetType(v string) {
	o.Type = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateTagDataAttributes) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTagDataAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateTagDataAttributes) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateTagDataAttributes) SetDescription(v string) {
	o.Description = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *UpdateTagDataAttributes) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTagDataAttributes) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *UpdateTagDataAttributes) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *UpdateTagDataAttributes) SetColor(v string) {
	o.Color = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *UpdateTagDataAttributes) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTagDataAttributes) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *UpdateTagDataAttributes) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *UpdateTagDataAttributes) SetIcon(v string) {
	o.Icon = &v
}

func (o UpdateTagDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTagDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	return toSerialize, nil
}

type NullableUpdateTagDataAttributes struct {
	value *UpdateTagDataAttributes
	isSet bool
}

func (v NullableUpdateTagDataAttributes) Get() *UpdateTagDataAttributes {
	return v.value
}

func (v *NullableUpdateTagDataAttributes) Set(val *UpdateTagDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTagDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTagDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTagDataAttributes(val *UpdateTagDataAttributes) *NullableUpdateTagDataAttributes {
	return &NullableUpdateTagDataAttributes{value: val, isSet: true}
}

func (v NullableUpdateTagDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTagDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


