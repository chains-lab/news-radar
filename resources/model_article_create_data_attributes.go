/*
REST API

REST API

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ArticleCreateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleCreateDataAttributes{}

// ArticleCreateDataAttributes struct for ArticleCreateDataAttributes
type ArticleCreateDataAttributes struct {
	// Article title
	Title string `json:"title"`
	// Article link
	Icon string `json:"icon"`
	// Article description
	Desc string `json:"desc"`
	// Authors ID uuid
	Authors []string `json:"authors"`
	// Article content
	Content string `json:"content"`
	Tags []TagDataYaml `json:"tags"`
	// Article status
	Status string `json:"status"`
}

type _ArticleCreateDataAttributes ArticleCreateDataAttributes

// NewArticleCreateDataAttributes instantiates a new ArticleCreateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleCreateDataAttributes(title string, icon string, desc string, authors []string, content string, tags []TagDataYaml, status string) *ArticleCreateDataAttributes {
	this := ArticleCreateDataAttributes{}
	this.Title = title
	this.Icon = icon
	this.Desc = desc
	this.Authors = authors
	this.Content = content
	this.Tags = tags
	this.Status = status
	return &this
}

// NewArticleCreateDataAttributesWithDefaults instantiates a new ArticleCreateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleCreateDataAttributesWithDefaults() *ArticleCreateDataAttributes {
	this := ArticleCreateDataAttributes{}
	return &this
}

// GetTitle returns the Title field value
func (o *ArticleCreateDataAttributes) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ArticleCreateDataAttributes) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ArticleCreateDataAttributes) SetTitle(v string) {
	o.Title = v
}

// GetIcon returns the Icon field value
func (o *ArticleCreateDataAttributes) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *ArticleCreateDataAttributes) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *ArticleCreateDataAttributes) SetIcon(v string) {
	o.Icon = v
}

// GetDesc returns the Desc field value
func (o *ArticleCreateDataAttributes) GetDesc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Desc
}

// GetDescOk returns a tuple with the Desc field value
// and a boolean to check if the value has been set.
func (o *ArticleCreateDataAttributes) GetDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Desc, true
}

// SetDesc sets field value
func (o *ArticleCreateDataAttributes) SetDesc(v string) {
	o.Desc = v
}

// GetAuthors returns the Authors field value
func (o *ArticleCreateDataAttributes) GetAuthors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Authors
}

// GetAuthorsOk returns a tuple with the Authors field value
// and a boolean to check if the value has been set.
func (o *ArticleCreateDataAttributes) GetAuthorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Authors, true
}

// SetAuthors sets field value
func (o *ArticleCreateDataAttributes) SetAuthors(v []string) {
	o.Authors = v
}

// GetContent returns the Content field value
func (o *ArticleCreateDataAttributes) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *ArticleCreateDataAttributes) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *ArticleCreateDataAttributes) SetContent(v string) {
	o.Content = v
}

// GetTags returns the Tags field value
func (o *ArticleCreateDataAttributes) GetTags() []TagDataYaml {
	if o == nil {
		var ret []TagDataYaml
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ArticleCreateDataAttributes) GetTagsOk() ([]TagDataYaml, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *ArticleCreateDataAttributes) SetTags(v []TagDataYaml) {
	o.Tags = v
}

// GetStatus returns the Status field value
func (o *ArticleCreateDataAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ArticleCreateDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ArticleCreateDataAttributes) SetStatus(v string) {
	o.Status = v
}

func (o ArticleCreateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleCreateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["icon"] = o.Icon
	toSerialize["desc"] = o.Desc
	toSerialize["authors"] = o.Authors
	toSerialize["content"] = o.Content
	toSerialize["tags"] = o.Tags
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *ArticleCreateDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"icon",
		"desc",
		"authors",
		"content",
		"tags",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArticleCreateDataAttributes := _ArticleCreateDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArticleCreateDataAttributes)

	if err != nil {
		return err
	}

	*o = ArticleCreateDataAttributes(varArticleCreateDataAttributes)

	return err
}

type NullableArticleCreateDataAttributes struct {
	value *ArticleCreateDataAttributes
	isSet bool
}

func (v NullableArticleCreateDataAttributes) Get() *ArticleCreateDataAttributes {
	return v.value
}

func (v *NullableArticleCreateDataAttributes) Set(val *ArticleCreateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleCreateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleCreateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleCreateDataAttributes(val *ArticleCreateDataAttributes) *NullableArticleCreateDataAttributes {
	return &NullableArticleCreateDataAttributes{value: val, isSet: true}
}

func (v NullableArticleCreateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleCreateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


