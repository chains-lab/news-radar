/*
REST API

REST API

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// checks if the ArticleUpdateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleUpdateDataAttributes{}

// ArticleUpdateDataAttributes struct for ArticleUpdateDataAttributes
type ArticleUpdateDataAttributes struct {
	// Article status
	Status *string `json:"status,omitempty"`
	// Article title
	Title *string `json:"title,omitempty"`
	// Article link
	Icon *string `json:"icon,omitempty"`
	// Article description
	Desc *string `json:"desc,omitempty"`
	// Article content
	Content map[string]interface{} `json:"content,omitempty"`
	// Authors ID uuid
	Authors []string `json:"authors,omitempty"`
	Tags []string `json:"tags,omitempty"`
}

// NewArticleUpdateDataAttributes instantiates a new ArticleUpdateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleUpdateDataAttributes() *ArticleUpdateDataAttributes {
	this := ArticleUpdateDataAttributes{}
	return &this
}

// NewArticleUpdateDataAttributesWithDefaults instantiates a new ArticleUpdateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleUpdateDataAttributesWithDefaults() *ArticleUpdateDataAttributes {
	this := ArticleUpdateDataAttributes{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ArticleUpdateDataAttributes) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleUpdateDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ArticleUpdateDataAttributes) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ArticleUpdateDataAttributes) SetStatus(v string) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ArticleUpdateDataAttributes) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleUpdateDataAttributes) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ArticleUpdateDataAttributes) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ArticleUpdateDataAttributes) SetTitle(v string) {
	o.Title = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *ArticleUpdateDataAttributes) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleUpdateDataAttributes) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *ArticleUpdateDataAttributes) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *ArticleUpdateDataAttributes) SetIcon(v string) {
	o.Icon = &v
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *ArticleUpdateDataAttributes) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleUpdateDataAttributes) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *ArticleUpdateDataAttributes) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *ArticleUpdateDataAttributes) SetDesc(v string) {
	o.Desc = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ArticleUpdateDataAttributes) GetContent() map[string]interface{} {
	if o == nil || IsNil(o.Content) {
		var ret map[string]interface{}
		return ret
	}
	return o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleUpdateDataAttributes) GetContentOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Content) {
		return map[string]interface{}{}, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ArticleUpdateDataAttributes) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given map[string]interface{} and assigns it to the Content field.
func (o *ArticleUpdateDataAttributes) SetContent(v map[string]interface{}) {
	o.Content = v
}

// GetAuthors returns the Authors field value if set, zero value otherwise.
func (o *ArticleUpdateDataAttributes) GetAuthors() []string {
	if o == nil || IsNil(o.Authors) {
		var ret []string
		return ret
	}
	return o.Authors
}

// GetAuthorsOk returns a tuple with the Authors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleUpdateDataAttributes) GetAuthorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Authors) {
		return nil, false
	}
	return o.Authors, true
}

// HasAuthors returns a boolean if a field has been set.
func (o *ArticleUpdateDataAttributes) HasAuthors() bool {
	if o != nil && !IsNil(o.Authors) {
		return true
	}

	return false
}

// SetAuthors gets a reference to the given []string and assigns it to the Authors field.
func (o *ArticleUpdateDataAttributes) SetAuthors(v []string) {
	o.Authors = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ArticleUpdateDataAttributes) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleUpdateDataAttributes) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ArticleUpdateDataAttributes) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ArticleUpdateDataAttributes) SetTags(v []string) {
	o.Tags = v
}

func (o ArticleUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleUpdateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Authors) {
		toSerialize["authors"] = o.Authors
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableArticleUpdateDataAttributes struct {
	value *ArticleUpdateDataAttributes
	isSet bool
}

func (v NullableArticleUpdateDataAttributes) Get() *ArticleUpdateDataAttributes {
	return v.value
}

func (v *NullableArticleUpdateDataAttributes) Set(val *ArticleUpdateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleUpdateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleUpdateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleUpdateDataAttributes(val *ArticleUpdateDataAttributes) *NullableArticleUpdateDataAttributes {
	return &NullableArticleUpdateDataAttributes{value: val, isSet: true}
}

func (v NullableArticleUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleUpdateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


